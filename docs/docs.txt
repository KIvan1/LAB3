Модуль map_class.cpp
Метод load_map 

Тест load_map, suite1
Цель: проверить корректность загрузки карты из файла.
Тип: позитивный.
Входные данные: "maps/map.txt"
Ожидаемый результат: карта загружена и совпадает с содержимим исходного файла.

Тест load_map, suite1
Цель: проверить корректность работы функции при отсутствии файла.
Тип: негативный.
Входные данные: "nofile.txt"
Ожидаемый результат: в поток ошибок выведено сообщение.


Метод finish
Тест init_finish, suite1
Цель: проверить корректность работы функции при отрицательных координатах.
Тип: негативный.
Входные данные: -1, -1
Ожидаемый результат: в поток ошибок выведено сообщение.

Тест init_finish, suite2
Цель: проверить корректность работы функции при помещении финиша за пределы карты.
Тип: негативный.
Входные данные: 42, 50
Ожидаемый результат: в поток ошибок выведено сообщение.

Тест init_finish, suite3
Цель: проверить корректность работы функции при помещении финиша в нечетную координату по х.
Тип: негативный.
Входные данные: 39, 19
Ожидаемый результат: в поток ошибок выведено сообщение.

Тест init_finish, suite4
Цель: проверить корректность работы функции при помещении финиша в клетку со стеной.
Тип: негативный.
Входные данные: 2, 2
Ожидаемый результат: в поток ошибок выведено сообщение.

Тест init_finish, suite5
Цель: проверить корректность работы функции при созднии финиша.
Тип: позитивный.
Входные данные: 38, 19
Ожидаемый результат: поля класса map f_x = 38 и f_y = 19.




Модуль hero_class.cpp
Метод init  

Тест hero_init, suite1
Цель: проверить корректность работы метода при помещение пресонажа в правильные координаты.
Тип: позитивный.
Входные данные: 2, 1
Ожидаемый результат: позициягероя по x = 2, по у = 1.

Тест hero_init, suite2
Цель: проверить корректность работы метода при помещение пресонажа в нулевые координаты.
Тип: негативный.
Входные данные: 0, 0
Ожидаемый результат: в поток ошибок выведено сообщение

Тест hero_init, suite3
Цель: проверить корректность работы метода при помещение пресонажа в отрицательные координаты.
Тип: негативный.
Входные данные: -1, -3
Ожидаемый результат: в поток ошибок выведено сообщение

Тест hero_init, suite4
Цель: проверить корректность работы метода при помещение пресонажа за пределы лаберинта.
Тип: негативный.
Входные данные: 42, 50
Ожидаемый результат: в поток ошибок выведено сообщение

Тест hero_init, suite5
Цель: проверить корректность работы метода при помещение пресонажа в клетку, где расположена стена.
Тип: негативный.
Входные данные: 2, 2
Ожидаемый результат: в поток ошибок выведено сообщение

Тест hero_init, suite6
Цель: проверить корректность работы метода при помещение пресонажа в клетку, с нечетной координатой по x.
Тип: негативный.
Входные данные: 1, 1
Ожидаемый результат: в поток ошибок выведено сообщение


Методы move_x, move_y 

Тест hero_move, suite1
Цель: проверить корректность работы метода при перемещение персонажа по x больше чем на один шаг.
Тип: негативный.
Входные данные: 2, map m
Ожидаемый результат: в поток ошибок выведено сообщение

Тест hero_move, suite2
Цель: проверить корректность работы метода при перемещение персонажа по y больше чем на один шаг.
Тип: негативный.
Входные данные: 2, map m
Ожидаемый результат: в поток ошибок выведено сообщение

Тест hero_move, suite3
Цель: проверить корректность работы метода при перемещение персонажа по х вправо.
Тип: позитивный.
Входные данные: 1, map m
Ожидаемый результат: координата персонажа по (поле x) увеличилось на два.

Тест hero_move, suite4
Цель: проверить корректность работы метода при перемещение персонажа по х влево.
Тип: позитивный.
Входные данные: -1, map m
Ожидаемый результат: координата персонажа по (поле x) уменьшилось на два.

Тест hero_move, suite5
Цель: проверить корректность работы метода при перемещение персонажа по у вниз.
Тип: позитивный.
Входные данные: 1, map m
Ожидаемый результат: координата персонажа по (поле у) увеличилось на один.

Тест hero_move, suite6
Цель: проверить корректность работы метода при перемещение персонажа по у вверх.
Тип: позитивный.
Входные данные: -1, map m
Ожидаемый результат: координата персонажа по (поле у) уменьшилось на один.

Тест hero_move, suite7
Цель: проверить корректность работы метода если преонаж "уперся" в стену слева.
Тип: негативный.
Входные данные: -1, map m
Ожидаемый результат: координата персонажа по (поле x) не изменилась.

Тест hero_move, suite8
Цель: проверить корректность работы метода если преонаж "уперся" в стену справа.
Тип: негативный.
Входные данные: 1, map m
Ожидаемый результат: координата персонажа по (поле x) не изменилась.

Тест hero_move, suite9
Цель: проверить корректность работы метода если преонаж "уперся" в стену сверху.
Тип: негативный.
Входные данные: -1, map m
Ожидаемый результат: координата персонажа по (поле у) не изменилась.

Тест hero_move, suite10
Цель: проверить корректность работы метода если преонаж "уперся" в стену снизу.
Тип: негативный.
Входные данные: 1, map m
Ожидаемый результат: координата персонажа по (поле у) не изменилась


Mетод collision

Тест collision, suite1
Цель: проверить корректность работы метода если преонаж и враг оказались в одной клетке.
Тип: позитивный.
Входные данные: enemy e, map m
Ожидаемый результат: функция вернула еденицу

Тест collision, suite2
Цель: проверить корректность работы метода если преонаж и финиш оказались в одной клетке.
Тип: позитивный.
Входные данные: enemy e, map m
Ожидаемый результат: функция вернула единицу

Тест collision, suite3
Цель: проверить корректность работы метода если пути персонажа и врага пересеклись.
Тип: позитивный.
Входные данные: enemy e, map m
Ожидаемый результат: функция вернула единицу




Модуль enemy_class.cpp
Метод init

Тест enemy_init, suite1
Цель: проверить корректность работы метода при помещение врага в правильные координаты.
Тип: позитивный.
Входные данные: 2, 1, 10, map m
Ожидаемый результат: поля класса enemy x = 2, у = 1, prev_x = 2, prev_y = 1, way_len = 10, массив way заполнен нулями.

Тест enemy_init, suite2
Цель: проверить корректность работы метода при помещение врага в отрицательные координаты.
Тип: негативный.
Входные данные: -1, -1, 10, map m.
Ожидаемый результат: в поток ошибок выведено сообщение

Тест enemy_init, suite3
Цель: проверить корректность работы метода при помещение врага за пределы карты.
Тип: негативный.
Входные данные: 50, 50, 10, map m.
Ожидаемый результат: в поток ошибок выведено сообщение

Тест enemy_init, suite4
Цель: проверить корректность работы метода при помещение врага в нечетную координату по х.
Тип: негативный.
Входные данные: 1, 1, 10, map m.
Ожидаемый результат: в поток ошибок выведено сообщение

Тест enemy_init, suite5
Цель: проверить корректность работы метода при массиве из нуля.
Тип: негативный.
Входные данные: 2, 1, 0, map m.
Ожидаемый результат: в поток ошибок выведено сообщение

Тест enemy_init, suite6
Цель: проверить корректность работы метода при массиве из отрицательного числа эллементв.
Тип: негативный.
Входные данные: 2, 1, -3, map m.
Ожидаемый результат: в поток ошибок выведено сообщение

Тест enemy_init, suite7
Цель: проверить корректность работы метода при помещении героя в клетку со стеной.
Тип: негативный.
Входные данные: 2, 2, 10, map m.
Ожидаемый результат: в поток ошибок выведено сообщение




Модуль enemy_class.cpp
Метод move_enemy

Тест move_enemy, suite1
Цель: проверить корректность работы метода при невозможности передвинуть врага.
Тип: негативный.
Входные данные: map m
Ожидаемый результат: в поток ошибок выведено сообщение

Тест move_enemy, suite2
Цель: проверить корректность работы метода при создании пути.
Тип: позитивный.
Входные данные: map m
Ожидаемый результат: в массиве way класс enemy не нули, а в поле side значение -1.

Тест move_enemy, suite3
Цель: проверить корректность работы метода при движении врага по построенному маршруту.
Тип: позитивный.
Входные данные: map m
Ожидаемый результат: враг корректно перемещается по маршруту.

Модуль enemy_class.cpp map_class.cpp hero_class.cpp
Метод drow_map drow_hero drow_enemy

Цель: проверить корректность отрисовки
Тип: позитивный.
Входные данные: hero m
Ожидаемый результат: карта отрисовывается корректно
